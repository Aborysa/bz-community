/*****************************************************************************
  Key things about Battlezone AI:
  1) Scrap matters for every group except slush - give AI a ton of scrap!
  2) The AI must know where your units are in order to attack your base- let them
     explore (100 priority, 1-2 max goals) is good) or start some enemy units near your base!
  3) NUMBER_TO_HAVE vs. NUMBER_TO_BUILD is an EXTREMELY important distinction!
  4) To make an AI truly effective, it needs effective units. IE bombers,
     walkers, rocket tanks etc.  
  5) Variability and ranges are good! Make the AI play differently different times.
  6) Multiple custom factories or recyclers of different build capabilities may confuse
     and hang the AIP reader. If this is the case- use standard factories and recyclers
     and otherwise use pilot spawners offscreen to get the units you want.
  7) Match the ACCOUNT build priority in tenths value differences in the FORCE MATCHING section.
     mention every unit that you call to build! Especially if they are CUSTOM UNITS! If you're getting
     a seemingly inexplicable crash mid game, make sure you have mentioned and correctly prioritized
     every unit you call to build (or build from).
  8) Perimeter priorities may cause obscure crashing: a) When asked to patrol near impassable terrain
     (Lava/cliffs) b) When asking custom units to patrol. If you're getting a crash near the enemy base,
     this is likely your problem (disable perimeter priorities and make perimeter goals
  9) Exploration priorities may cause obscure crashing: a) When asked to explore near impassible or dangerous
     terrain (Lava/cliffs) b) When asking custom units to explore.
  10) Do not change custom unit .odfs once they are already placed in the mission (particularly production
     unit .odfs- this can cause the units to not working properly (what the .bzn thinks an .odf is doesn't  
     match with what it actually is = doesn't work). This may be related to 6)

PACER TESTS

It takes about 7 minuts plus or minus 2 to burn through 200 scrap with THIS AIP
It takes exactly 6 minutes for a pacer SAV (air...) with speed 0.25 to cross one map "frame"
It takes a pacer TUG with speed 0.12 roughly 10 minutes to cross HALF a frame (back and forth motion slows futher)

 *****************************************************************************/

#include "aipdef.h"

int VERBOSE_SCHEDULER = 0;

// How often do we recompute the strategy?
int recompute_strategy_period = 5;

// PRIORITIES
int escort_priority = 1000;
int min_escort_force = 1;
int max_escort_force = 3;
int ground_unit_threat = 50; //50
int threat_priority = 1000;
int distance_priority = -1;  // was -1
int defend_buildings_priority = 100;
int attack_enemy_base_priority = 12000; //3000; //50
int persistence_priority = 400; //1000
int exploration_priority = 400; //800; //50
int scripted_priority = 1;
int single_use_group_priority = 30;
int perimeter_priority = 200; //50

// TROOP COMMITMENT STUFF 
double min_matching_force_ratio =  1.5; //0.2;
double max_matching_force_ratio = 5.0; //3.0;

// When generic troops are called for, what should be ratio of troops that can
// shoot ground targets to troops that can shoot air targets?
double generic_ground_ratio = 1.0;

int min_building_defense_force = 1;
int max_building_defense_force = 4;

int min_exploration_force = 1;
int max_exploration_force = 6;

int min_perimeter_force = 1;
int max_perimeter_force = 4;

int min_attack_enemy_base_force = 10;
int max_attack_enemy_base_force = 30;



// RELAXATION STUFF 
int relaxation_cycles = 0; //0;
float relaxation_coefficient = 0.5; //.5;
// What percentage of the time are we engaged?

// Scheduler goals stuff
// -1 = unlimited
#define MAX_DEFEND_BASE_GOALS 2
// Matches defend_buildings_priority

#define MAX_ATTACK_TROOPS_GOALS -1
// Matches attack_enemy_base_priority

#define MAX_SEIGE_GOALS 0
// Matches persistence_priority

#define MAX_EXPLORATION_GOALS 2
// How many units can be assigned to explore?

#define MAX_SCRIPTED_GOALS -1
// How many units can be assigned scripted goals by .bzn (Not used?)

#define MAX_PERIMETER_GOALS 4
// How many units can be assigned to patrol outside of base (area-defend)

///////////////////////////////////////////////////////////////////////////////
// New Construction Program stuff


///////////////////////////////////////////////////////////////////////////////
// The UCP Data
// --------------------
// This specifies what type of units to build.
UNIT_CONSTRUCTION_PROGRAM unit_construction_program[MAX_UCP_LENGTH];

#DATA

//   Which Account          BUDGET          BUDGET CAP
//----------------------------------------------------
	"Slush",	UNLIMITED,	UNLIMITED;
	"Defense",	       70,        100;
	"Offense",	UNLIMITED,	UNLIMITED;

#END_DATA



///////////////////////////////////////////////////////////////////////////////
// ACCOUNT NOTES.
// --------------
// For each line item in an account, you must specify a build type from one of
// the following... NUMBER_TO_HAVE, NUMBER_TO_BUILD, RATIO_TO_BUILD, or RATIO_TO_HAVE.
//
// The "RATIO" items can only occur in the lowest priority level of an account.
// Also, all line-items with the same priority must have the same build type


///////////////////////////////////////////////////////////////////////////////
// Slush
// --------------------
// This specifies the baseline super-critical account

ACCOUNT Slush[MAX_ACCOUNT_LENGTH];

#DATA

//  Priority     Item Name              Build Type              Build Amount
//--------------------------------------------------------------------
	21,	"svrecy",	NUMBER_TO_HAVE,		1;
	20,	"svmuf",	NUMBER_TO_HAVE,		1;
	19,	"svscav",	NUMBER_TO_HAVE,		4;
	18,	"svcnst",	NUMBER_TO_HAVE,		1;
//	10,	"sbspow",	NUMBER_TO_HAVE,		4;
//	10,	"sbtowe",	NUMBER_TO_HAVE,		7;
//	10,	"sbbarr",	NUMBER_TO_HAVE,		4;
//	8,	"sbsupp",	NUMBER_TO_HAVE,		2;
//	7,	"sbhang",	NUMBER_TO_HAVE,		1;
#END_DATA



///////////////////////////////////////////////////////////////////////////////
// DEFENSE
// --------------------
// What sort of offensive units and support structures do we want

ACCOUNT Defense[MAX_ACCOUNT_LENGTH];

#DATA

//  Priority     Item Name              Build Type              Build Amount
//--------------------------------------------------------------------
	19,		"svfigh",	NUMBER_TO_HAVE,		3;
	19,		"svtank",	NUMBER_TO_HAVE,		2;
	3,		"svturr",	NUMBER_TO_HAVE,		6;
	

#END_DATA

///////////////////////////////////////////////////////////////////////////////
// OFFENSE
// --------------------
// What sort of offensive units and support structures do we want

ACCOUNT Offense[MAX_ACCOUNT_LENGTH];

#DATA

//  Priority     Item Name              Build Type              Build Amount
//--------------------------------------------------------------------
	18,		"svtank",	NUMBER_TO_HAVE,		15;
	17,		"svrckt",	NUMBER_TO_HAVE,		8;
	17,		"svltnk",	NUMBER_TO_HAVE,		10;
	18,		"svfigh",	NUMBER_TO_HAVE,		8;
	13,		"svhraz",	NUMBER_TO_HAVE,		3;
	12,		"svwalk",	NUMBER_TO_HAVE,		5;
	

#END_DATA




///////////////////////////////////////////////////////////////////////////////
// FORCE MATCHING
// --------------
// Which units do we want to emphasize & target with this aip?
// Note that this can be used for BOTH the AI team's unit strengths and 
// the opponents'
FORCE_MATCHING My_Matchings[MAX_FORCE_MATCHING];

#DATA

// Unit Name             Multiplier
//----------------------------------

//   "svscav",  0.2;
//   "avfigh",  3.0;
//   "avturr",	1.0;
//   "avtank",	2.5;
//   "avhraz",	2.4;
//   "avltnk",	2.3;
//   "avrckt",	2.2;
//   "svscav",  2.0;
//   "sbtowe",  0.1;
//   "svrecyl",	3.0;

"sbtowe", 0.5;
"abtowe", 0.5;
"cbtowe", 0.5;
"bbtowe", 0.5;
"sbsilo", 0.2;
"absilo", 0.2;
"bbsilo", 0.2;
"cbsilo", 0.2;



#END_DATA


BUILDING_MATCHING My_Building_Matchings[MAX_BUILDINGS];

#DATA

// Building Name                   Multiplier         Where to Build
//------------------------------------------------------------------
   "svmuf",                           2.00,              CENTER_OF_BASE;
   "svrecy",                          2.00,              CENTER_OF_BASE;
   "svcnst",                          2.00,              CENTER_OF_BASE;     

#END_DATA